security:
  role_hierarchy:
    ROLE_ADMIN: [ ROLE_USER ]

  enable_authenticator_manager: true
  password_hashers:
    Symfony\Component\Security\Core\User\PasswordAuthenticatedUserInterface: 'auto'
  providers:
    app_user_provider:
      entity:
        class: App\Entity\User
        property: email
  firewalls:
    dev:
      pattern: ^/(_(profiler|wdt)|css|images|js)/
      security: false

    login:
      pattern: ^/api/login
      stateless: true
      json_login:
        check_path: /api/login_check # or api_login_check as defined in config/routes.yaml
        success_handler: lexik_jwt_authentication.handler.authentication_success
        failure_handler: lexik_jwt_authentication.handler.authentication_failure

    main:
      pattern: ^/
      stateless: true
      lazy: true
      provider: app_user_provider
      remember_me:
        secret: '%kernel.secret%'
        lifetime: 86400
        path: /
      guard:
        authenticators:
          - lexik_jwt_authentication.jwt_token_authenticator

  access_control:
   - { path: ^/api/login_check, roles: IS_AUTHENTICATED_ANONYMOUSLY }
   - { path: ^/api/rest/get-products, roles: IS_AUTHENTICATED_ANONYMOUSLY }
   - { path: ^/, roles: IS_AUTHENTICATED_FULLY }

when@test:
  security:
    password_hashers:
      Symfony\Component\Security\Core\User\PasswordAuthenticatedUserInterface:
        algorithm: auto
        cost: 4 # Lowest possible value for bcrypt
        time_cost: 3 # Lowest possible value for argon
        memory_cost: 10 # Lowest possible value for argon
